#include "stdafx.h"
#include "DrillBuilding.h"

/// AUTOGENERATED METHODS ///

size_t DrillBuildingFactory::GetTypes(uint32_t* pDstTypes, size_t count) const {
	if (count >= 1) {
		pDstTypes[0] = DrillBuilding::NOUN_ID;
		return 1;
	}
	return 0;
}
Object* DrillBuildingFactory::Create(uint32_t type, ICoreAllocator* pAllocator) {
	return new DrillBuilding();
}
const char* DrillBuildingFactory::GetName(uint32_t type) const {
	return "DrillBuilding";
}


int DrillBuilding::AddRef() {
	return DefaultRefCounted::AddRef();
}
int DrillBuilding::Release() {
	return DefaultRefCounted::Release();
}

uint32_t DrillBuilding::GetCastID() const {
	return TYPE;
}
uint32_t DrillBuilding::GetNounID() const {
	return NOUN_ID;
}

void* DrillBuilding::Cast(uint32_t type) const {
	CLASS_CAST(DrillBuilding);
	PARENT_CAST(cGameData);
	return nullptr;
}

bool DrillBuilding::Write(Simulator::ISerializerStream* stream)
{
	return Simulator::ClassSerializer(this, ATTRIBUTES).Write(stream);
}
bool DrillBuilding::Read(Simulator::ISerializerStream* stream)
{
	return Simulator::ClassSerializer(this, ATTRIBUTES).Read(stream);
}

/// END OF AUTOGENERATED METHODS ///
////////////////////////////////////

Simulator::Attribute DrillBuilding::ATTRIBUTES[] = {
	// Add more attributes here
	// This one must always be at the end
	Simulator::Attribute()
};